---
swagger: "2.0"
info:
  description: "## TMF API Reference: TMF633 - Service Catalog Management\n\n### Release\
    \ : 18.5 - December 2018\n\nService Catalog API is one of Catalog Management API\
    \ Family. Service Catalog API goal is to provide a catalog of services. \n\n###\
    \ Resource \n- serviceCatalog\n\n### Operations\nService Catalog API performs\
    \ the following operations on the resource :\n- Retrieve an entity or a collection\
    \ of entities depending on filter criteria\n- Partial update of an entity (including\
    \ updating rules)\n- Create an entity (including default values and creation rules)\n\
    - Delete an entity (for administration purposes)\n- Manage notification of events"
  version: "4.0.0"
  title: "Service Catalog Management"
host: "serverRoot"
basePath: "/tmf-api/serviceCatalogManagement/v4/"
tags:
- name: "serviceCatalog"
- name: "serviceCategory"
- name: "serviceCandidate"
- name: "serviceSpecification"
- name: "importJob"
- name: "exportJob"
- name: "notification listeners (client side)"
- name: "events subscription"
schemes:
- "https"
consumes:
- "application/json;charset=utf-8"
produces:
- "application/json;charset=utf-8"
paths:
  /serviceCatalog:
    get:
      tags:
      - "serviceCatalog"
      summary: "List or find ServiceCatalog objects"
      description: "This operation list or find ServiceCatalog entities"
      operationId: "listServiceCatalog"
      parameters:
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to be provided in response"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          headers:
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria"
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ServiceCatalog"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceCatalog"
    post:
      tags:
      - "serviceCatalog"
      summary: "Creates a ServiceCatalog"
      description: "This operation creates a ServiceCatalog entity."
      operationId: "createServiceCatalog"
      parameters:
      - in: "body"
        name: "serviceCatalog"
        description: "The ServiceCatalog to be created"
        required: true
        schema:
          $ref: "#/definitions/ServiceCatalog_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/ServiceCatalog"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceCatalog"
  /serviceCatalog/{id}:
    get:
      tags:
      - "serviceCatalog"
      summary: "Retrieves a ServiceCatalog by ID"
      description: "This operation retrieves a ServiceCatalog entity. Attribute selection\
        \ is enabled for all first level attributes."
      operationId: "retrieveServiceCatalog"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ServiceCatalog"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to provide in response"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/ServiceCatalog"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceCatalog"
    delete:
      tags:
      - "serviceCatalog"
      summary: "Deletes a ServiceCatalog"
      description: "This operation deletes a ServiceCatalog entity."
      operationId: "deleteServiceCatalog"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ServiceCatalog"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceCatalog"
    patch:
      tags:
      - "serviceCatalog"
      summary: "Updates partially a ServiceCatalog"
      description: "This operation updates partially a ServiceCatalog entity."
      operationId: "patchServiceCatalog"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ServiceCatalog"
        required: true
        type: "string"
      - in: "body"
        name: "serviceCatalog"
        description: "The ServiceCatalog to be updated"
        required: true
        schema:
          $ref: "#/definitions/ServiceCatalog_Update"
      responses:
        200:
          description: "Updated"
          schema:
            $ref: "#/definitions/ServiceCatalog"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceCatalog"
  /serviceCategory:
    get:
      tags:
      - "serviceCategory"
      summary: "List or find ServiceCategory objects"
      description: "This operation list or find ServiceCategory entities"
      operationId: "listServiceCategory"
      parameters:
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to be provided in response"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          headers:
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria"
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ServiceCategory"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceCategory"
    post:
      tags:
      - "serviceCategory"
      summary: "Creates a ServiceCategory"
      description: "This operation creates a ServiceCategory entity."
      operationId: "createServiceCategory"
      parameters:
      - in: "body"
        name: "serviceCategory"
        description: "The ServiceCategory to be created"
        required: true
        schema:
          $ref: "#/definitions/ServiceCategory_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/ServiceCategory"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceCategory"
  /serviceCategory/{id}:
    get:
      tags:
      - "serviceCategory"
      summary: "Retrieves a ServiceCategory by ID"
      description: "This operation retrieves a ServiceCategory entity. Attribute selection\
        \ is enabled for all first level attributes."
      operationId: "retrieveServiceCategory"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ServiceCategory"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to provide in response"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/ServiceCategory"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceCategory"
    delete:
      tags:
      - "serviceCategory"
      summary: "Deletes a ServiceCategory"
      description: "This operation deletes a ServiceCategory entity."
      operationId: "deleteServiceCategory"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ServiceCategory"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceCategory"
    patch:
      tags:
      - "serviceCategory"
      summary: "Updates partially a ServiceCategory"
      description: "This operation updates partially a ServiceCategory entity."
      operationId: "patchServiceCategory"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ServiceCategory"
        required: true
        type: "string"
      - in: "body"
        name: "serviceCategory"
        description: "The ServiceCategory to be updated"
        required: true
        schema:
          $ref: "#/definitions/ServiceCategory_Update"
      responses:
        200:
          description: "Updated"
          schema:
            $ref: "#/definitions/ServiceCategory"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceCategory"
  /serviceCandidate:
    get:
      tags:
      - "serviceCandidate"
      summary: "List or find ServiceCandidate objects"
      description: "This operation list or find ServiceCandidate entities"
      operationId: "listServiceCandidate"
      parameters:
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to be provided in response"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          headers:
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria"
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ServiceCandidate"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceCandidate"
    post:
      tags:
      - "serviceCandidate"
      summary: "Creates a ServiceCandidate"
      description: "This operation creates a ServiceCandidate entity."
      operationId: "createServiceCandidate"
      parameters:
      - in: "body"
        name: "serviceCandidate"
        description: "The ServiceCandidate to be created"
        required: true
        schema:
          $ref: "#/definitions/ServiceCandidate_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/ServiceCandidate"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceCandidate"
  /serviceCandidate/{id}:
    get:
      tags:
      - "serviceCandidate"
      summary: "Retrieves a ServiceCandidate by ID"
      description: "This operation retrieves a ServiceCandidate entity. Attribute\
        \ selection is enabled for all first level attributes."
      operationId: "retrieveServiceCandidate"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ServiceCandidate"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to provide in response"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/ServiceCandidate"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceCandidate"
    delete:
      tags:
      - "serviceCandidate"
      summary: "Deletes a ServiceCandidate"
      description: "This operation deletes a ServiceCandidate entity."
      operationId: "deleteServiceCandidate"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ServiceCandidate"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceCandidate"
    patch:
      tags:
      - "serviceCandidate"
      summary: "Updates partially a ServiceCandidate"
      description: "This operation updates partially a ServiceCandidate entity."
      operationId: "patchServiceCandidate"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ServiceCandidate"
        required: true
        type: "string"
      - in: "body"
        name: "serviceCandidate"
        description: "The ServiceCandidate to be updated"
        required: true
        schema:
          $ref: "#/definitions/ServiceCandidate_Update"
      responses:
        200:
          description: "Updated"
          schema:
            $ref: "#/definitions/ServiceCandidate"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceCandidate"
  /serviceSpecification:
    get:
      tags:
      - "serviceSpecification"
      summary: "List or find ServiceSpecification objects"
      description: "This operation list or find ServiceSpecification entities"
      operationId: "listServiceSpecification"
      parameters:
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to be provided in response"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          headers:
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria"
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ServiceSpecification"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceSpecification"
    post:
      tags:
      - "serviceSpecification"
      summary: "Creates a ServiceSpecification"
      description: "This operation creates a ServiceSpecification entity."
      operationId: "createServiceSpecification"
      parameters:
      - in: "body"
        name: "serviceSpecification"
        description: "The ServiceSpecification to be created"
        required: true
        schema:
          $ref: "#/definitions/ServiceSpecification_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/ServiceSpecification"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceSpecification"
  /serviceSpecification/{id}:
    get:
      tags:
      - "serviceSpecification"
      summary: "Retrieves a ServiceSpecification by ID"
      description: "This operation retrieves a ServiceSpecification entity. Attribute\
        \ selection is enabled for all first level attributes."
      operationId: "retrieveServiceSpecification"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ServiceSpecification"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to provide in response"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/ServiceSpecification"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceSpecification"
    delete:
      tags:
      - "serviceSpecification"
      summary: "Deletes a ServiceSpecification"
      description: "This operation deletes a ServiceSpecification entity."
      operationId: "deleteServiceSpecification"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ServiceSpecification"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceSpecification"
    patch:
      tags:
      - "serviceSpecification"
      summary: "Updates partially a ServiceSpecification"
      description: "This operation updates partially a ServiceSpecification entity."
      operationId: "patchServiceSpecification"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ServiceSpecification"
        required: true
        type: "string"
      - in: "body"
        name: "serviceSpecification"
        description: "The ServiceSpecification to be updated"
        required: true
        schema:
          $ref: "#/definitions/ServiceSpecification_Update"
      responses:
        200:
          description: "Updated"
          schema:
            $ref: "#/definitions/ServiceSpecification"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceSpecification"
  /importJob:
    get:
      tags:
      - "importJob"
      summary: "List or find ImportJob objects"
      description: "This operation list or find ImportJob entities"
      operationId: "listImportJob"
      parameters:
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to be provided in response"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          headers:
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria"
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ImportJob"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ImportJob"
    post:
      tags:
      - "importJob"
      summary: "Creates a ImportJob"
      description: "This operation creates a ImportJob entity."
      operationId: "createImportJob"
      parameters:
      - in: "body"
        name: "importJob"
        description: "The ImportJob to be created"
        required: true
        schema:
          $ref: "#/definitions/ImportJob_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/ImportJob"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ImportJob"
  /importJob/{id}:
    get:
      tags:
      - "importJob"
      summary: "Retrieves a ImportJob by ID"
      description: "This operation retrieves a ImportJob entity. Attribute selection\
        \ is enabled for all first level attributes."
      operationId: "retrieveImportJob"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ImportJob"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to provide in response"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/ImportJob"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ImportJob"
    delete:
      tags:
      - "importJob"
      summary: "Deletes a ImportJob"
      description: "This operation deletes a ImportJob entity."
      operationId: "deleteImportJob"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ImportJob"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ImportJob"
  /exportJob:
    get:
      tags:
      - "exportJob"
      summary: "List or find ExportJob objects"
      description: "This operation list or find ExportJob entities"
      operationId: "listExportJob"
      parameters:
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to be provided in response"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          headers:
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria"
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ExportJob"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ExportJob"
    post:
      tags:
      - "exportJob"
      summary: "Creates a ExportJob"
      description: "This operation creates a ExportJob entity."
      operationId: "createExportJob"
      parameters:
      - in: "body"
        name: "exportJob"
        description: "The ExportJob to be created"
        required: true
        schema:
          $ref: "#/definitions/ExportJob_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/ExportJob"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ExportJob"
  /exportJob/{id}:
    get:
      tags:
      - "exportJob"
      summary: "Retrieves a ExportJob by ID"
      description: "This operation retrieves a ExportJob entity. Attribute selection\
        \ is enabled for all first level attributes."
      operationId: "retrieveExportJob"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ExportJob"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to provide in response"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/ExportJob"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ExportJob"
    delete:
      tags:
      - "exportJob"
      summary: "Deletes a ExportJob"
      description: "This operation deletes a ExportJob entity."
      operationId: "deleteExportJob"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ExportJob"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ExportJob"
  /hub:
    post:
      tags:
      - "events subscription"
      summary: "Register a listener"
      description: "Sets the communication endpoint address the service instance must\
        \ use to deliver information about its health state, execution state, failures\
        \ and metrics."
      operationId: "registerListener"
      parameters:
      - in: "body"
        name: "data"
        description: "Data containing the callback endpoint to deliver the information"
        required: true
        schema:
          $ref: "#/definitions/EventSubscriptionInput"
      responses:
        201:
          description: "Subscribed"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EventsSubscription"
  /hub/{id}:
    delete:
      tags:
      - "events subscription"
      summary: "Unregister a listener"
      description: "Resets the communication endpoint address the service instance\
        \ must use to deliver information about its health state, execution state,\
        \ failures and metrics."
      operationId: "unregisterListener"
      parameters:
      - name: "id"
        in: "path"
        description: "The id of the registered listener"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EventsSubscription"
  /listener/serviceSpecificationCreateNotification:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity ServiceSpecificationCreateNotification"
      description: "Example of a client listener for receiving the notification ServiceSpecificationCreateNotification"
      operationId: "listenToServiceSpecificationCreateNotification"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/ServiceSpecificationCreateNotification"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/serviceSpecificationChangeNotification:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity ServiceSpecificationChangeNotification"
      description: "Example of a client listener for receiving the notification ServiceSpecificationChangeNotification"
      operationId: "listenToServiceSpecificationChangeNotification"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/ServiceSpecificationChangeNotification"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/serviceSpecificationDeleteNotification:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity ServiceSpecificationDeleteNotification"
      description: "Example of a client listener for receiving the notification ServiceSpecificationDeleteNotification"
      operationId: "listenToServiceSpecificationDeleteNotification"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/ServiceSpecificationDeleteNotification"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/serviceCandidateCreateNotification:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity ServiceCandidateCreateNotification"
      description: "Example of a client listener for receiving the notification ServiceCandidateCreateNotification"
      operationId: "listenToServiceCandidateCreateNotification"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/ServiceCandidateCreateNotification"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/serviceCandidateChangeNotification:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity ServiceCandidateChangeNotification"
      description: "Example of a client listener for receiving the notification ServiceCandidateChangeNotification"
      operationId: "listenToServiceCandidateChangeNotification"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/ServiceCandidateChangeNotification"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/serviceCandidateDeleteNotification:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity ServiceCandidateDeleteNotification"
      description: "Example of a client listener for receiving the notification ServiceCandidateDeleteNotification"
      operationId: "listenToServiceCandidateDeleteNotification"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/ServiceCandidateDeleteNotification"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/serviceCategoryCreateNotification:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity ServiceCategoryCreateNotification"
      description: "Example of a client listener for receiving the notification ServiceCategoryCreateNotification"
      operationId: "listenToServiceCategoryCreateNotification"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/ServiceCategoryCreateNotification"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/serviceCategoryChangeNotification:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity ServiceCategoryChangeNotification"
      description: "Example of a client listener for receiving the notification ServiceCategoryChangeNotification"
      operationId: "listenToServiceCategoryChangeNotification"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/ServiceCategoryChangeNotification"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/serviceCategoryDeleteNotification:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity ServiceCategoryDeleteNotification"
      description: "Example of a client listener for receiving the notification ServiceCategoryDeleteNotification"
      operationId: "listenToServiceCategoryDeleteNotification"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/ServiceCategoryDeleteNotification"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/serviceCatalogCreateNotification:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity ServiceCatalogCreateNotification"
      description: "Example of a client listener for receiving the notification ServiceCatalogCreateNotification"
      operationId: "listenToServiceCatalogCreateNotification"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/ServiceCatalogCreateNotification"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/serviceCatalogChangeNotification:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity ServiceCatalogChangeNotification"
      description: "Example of a client listener for receiving the notification ServiceCatalogChangeNotification"
      operationId: "listenToServiceCatalogChangeNotification"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/ServiceCatalogChangeNotification"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/serviceCatalogBatchNotification:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity ServiceCatalogBatchNotification"
      description: "Example of a client listener for receiving the notification ServiceCatalogBatchNotification"
      operationId: "listenToServiceCatalogBatchNotification"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/ServiceCatalogBatchNotification"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/serviceCatalogDeleteNotification:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity ServiceCatalogDeleteNotification"
      description: "Example of a client listener for receiving the notification ServiceCatalogDeleteNotification"
      operationId: "listenToServiceCatalogDeleteNotification"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/ServiceCatalogDeleteNotification"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
definitions:
  AttachmentRef:
    type: "object"
    required:
    - "href"
    - "id"
    properties:
      id:
        type: "string"
        description: "Unique-Identifier for this attachment"
      href:
        type: "string"
        description: "URL serving as reference for the attachment resource"
      description:
        type: "string"
        description: "A narrative text describing the content of the attachment"
      url:
        type: "string"
        description: "Link to the attachment media/content"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "Attachment reference. An attachment complements the description\
      \ of an element (for instance a product) through video, pictures"
    example:
      '@referredType': "@referredType"
      '@baseType': "@baseType"
      '@type': "@type"
      description: "description"
      id: "id"
      href: "href"
      '@schemaLocation': "http://example.com/aeiou"
      url: "url"
  ExportJob:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Identifier of the export job"
      href:
        type: "string"
        description: "Reference of the export job"
      completionDate:
        type: "string"
        format: "date-time"
        description: "Data at which the job was completed"
      contentType:
        type: "string"
        description: "The format of the exported data"
      creationDate:
        type: "string"
        format: "date-time"
        description: "Date at which the job was created"
      errorLog:
        type: "string"
        description: "Reason for failure"
      path:
        type: "string"
        description: "URL of the root resource acting as the source for streaming\
          \ content to the file specified by the export job"
      query:
        type: "string"
        description: "Used to scope the exported data"
      status:
        type: "string"
        description: "Status of the export job (not started, running, succeeded, failed)"
      url:
        type: "string"
        description: "URL of the file containing the data to be exported"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "Represents a task used to export resources to a file"
    example:
      '@type': "@type"
      query: "query"
      errorLog: "errorLog"
      creationDate: "2000-01-23T04:56:07.000+00:00"
      url: "url"
      path: "path"
      '@baseType': "@baseType"
      completionDate: "2000-01-23T04:56:07.000+00:00"
      id: "id"
      href: "href"
      '@schemaLocation': "http://example.com/aeiou"
      contentType: "contentType"
      status: "status"
  ExportJob_Create:
    type: "object"
    required:
    - "url"
    properties:
      completionDate:
        type: "string"
        format: "date-time"
        description: "Data at which the job was completed"
      contentType:
        type: "string"
        description: "The format of the exported data"
      creationDate:
        type: "string"
        format: "date-time"
        description: "Date at which the job was created"
      errorLog:
        type: "string"
        description: "Reason for failure"
      path:
        type: "string"
        description: "URL of the root resource acting as the source for streaming\
          \ content to the file specified by the export job"
      query:
        type: "string"
        description: "Used to scope the exported data"
      status:
        type: "string"
        description: "Status of the export job (not started, running, succeeded, failed)"
      url:
        type: "string"
        description: "URL of the file containing the data to be exported"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "Represents a task used to export resources to a file\nSkipped properties:\
      \ id,href"
    example:
      path: "path"
      '@baseType': "@baseType"
      '@type': "@type"
      query: "query"
      completionDate: "2000-01-23T04:56:07.000+00:00"
      errorLog: "errorLog"
      creationDate: "2000-01-23T04:56:07.000+00:00"
      '@schemaLocation': "http://example.com/aeiou"
      contentType: "contentType"
      url: "url"
      status: "status"
  ImportJob:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Identifier of the import job"
      href:
        type: "string"
        description: "Reference of the import job"
      completionDate:
        type: "string"
        format: "date-time"
        description: "Date at which the job was completed"
      contentType:
        type: "string"
        description: "Indicates the format of the imported data"
      creationDate:
        type: "string"
        format: "date-time"
        description: "Date at which the job was created"
      errorLog:
        type: "string"
        description: "Reason for failure if status is failed"
      path:
        type: "string"
        description: "URL of the root resource where the content of the file specified\
          \ by the import job must be applied"
      status:
        type: "string"
        description: "Status of the import job (not started, running, succeeded, failed)"
      url:
        type: "string"
        description: "URL of the file containing the data to be imported"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "Represents a task used to import resources from a file"
    example:
      path: "path"
      '@baseType': "@baseType"
      '@type': "@type"
      completionDate: "2000-01-23T04:56:07.000+00:00"
      errorLog: "errorLog"
      id: "id"
      href: "href"
      creationDate: "2000-01-23T04:56:07.000+00:00"
      '@schemaLocation': "http://example.com/aeiou"
      contentType: "contentType"
      url: "url"
      status: "status"
  ImportJob_Create:
    type: "object"
    required:
    - "url"
    properties:
      completionDate:
        type: "string"
        format: "date-time"
        description: "Date at which the job was completed"
      contentType:
        type: "string"
        description: "Indicates the format of the imported data"
      creationDate:
        type: "string"
        format: "date-time"
        description: "Date at which the job was created"
      errorLog:
        type: "string"
        description: "Reason for failure if status is failed"
      path:
        type: "string"
        description: "URL of the root resource where the content of the file specified\
          \ by the import job must be applied"
      status:
        type: "string"
        description: "Status of the import job (not started, running, succeeded, failed)"
      url:
        type: "string"
        description: "URL of the file containing the data to be imported"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "Represents a task used to import resources from a file\nSkipped\
      \ properties: id,href"
    example:
      path: "path"
      '@baseType': "@baseType"
      '@type': "@type"
      completionDate: "2000-01-23T04:56:07.000+00:00"
      errorLog: "errorLog"
      creationDate: "2000-01-23T04:56:07.000+00:00"
      '@schemaLocation': "http://example.com/aeiou"
      contentType: "contentType"
      url: "url"
      status: "status"
  RelatedParty:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique identifier of a related party"
      href:
        type: "string"
        description: "Reference of the related party, could be a party reference or\
          \ a party role reference"
      name:
        type: "string"
        description: "Name of the related party"
      role:
        type: "string"
        description: "Role of the related party."
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "RelatedParty reference. A related party defines party or party role\
      \ linked to a specific entity."
    example:
      '@referredType': "@referredType"
      role: "role"
      '@baseType': "@baseType"
      '@type': "@type"
      name: "name"
      id: "id"
      href: "href"
      '@schemaLocation': "@schemaLocation"
  ResourceSpecificationRef:
    type: "object"
    required:
    - "href"
    - "id"
    properties:
      id:
        type: "string"
        description: "Unique identifier of the resource specification"
      href:
        type: "string"
        description: "Reference of the resource specification"
      name:
        type: "string"
        description: "Name of the requiredResourceSpecification"
      version:
        type: "string"
        description: "Resource specification version"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "Resource Specification reference: The ResourceSpecification is required\
      \ to realize a ProductSpecification."
    example:
      '@referredType': "@referredType"
      '@baseType': "@baseType"
      '@type': "@type"
      name: "name"
      id: "id"
      href: "href"
      '@schemaLocation': "http://example.com/aeiou"
      version: "version"
  ServiceCandidate:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique identifier of this REST resource"
      href:
        type: "string"
        description: "Hyperlink reference to this REST resource"
      description:
        type: "string"
        description: "Description of this REST resource"
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "Date and time of the last update of this REST resource"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status of the service\
          \ candidate."
      name:
        type: "string"
        description: "Name given to this REST resource"
      version:
        type: "string"
        description: "the version of service candidate"
      category:
        type: "array"
        description: "List of categories for this candidate"
        items:
          $ref: "#/definitions/ServiceCategoryRef"
      serviceSpecification:
        description: "The service specification implied by this candidate"
        $ref: "#/definitions/ServiceSpecificationRef"
      validFor:
        description: "The period for which this REST resource is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "ServiceCandidate is an entity that makes a service specification\
      \ available to a catalog. A\nServiceCandidate and its associated service specification\
      \ may be published - made visible - in any number of service catalogs, or in\
      \ none. One service specification can be composed of other service specifications."
    example:
      lifecycleStatus: "lifecycleStatus"
      validFor:
        startDateTime: "2000-01-23T04:56:07.000+00:00"
        endDateTime: "2000-01-23T04:56:07.000+00:00"
      '@type': "@type"
      serviceSpecification:
        targetServiceSchema:
          '@baseType': "@baseType"
          '@type': "@type"
          '@schemaLocation': "@schemaLocation"
        '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      description: "description"
      version: "version"
      '@baseType': "@baseType"
      lastUpdate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      id: "id"
      href: "href"
      category:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
  ServiceCandidate_Create:
    type: "object"
    required:
    - "name"
    properties:
      description:
        type: "string"
        description: "Description of this REST resource"
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "Date and time of the last update of this REST resource"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status of the service\
          \ candidate."
      name:
        type: "string"
        description: "Name given to this REST resource"
      version:
        type: "string"
        description: "the version of service candidate"
      category:
        type: "array"
        description: "List of categories for this candidate"
        items:
          $ref: "#/definitions/ServiceCategoryRef"
      serviceSpecification:
        description: "The service specification implied by this candidate"
        $ref: "#/definitions/ServiceSpecificationRef"
      validFor:
        description: "The period for which this REST resource is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "ServiceCandidate is an entity that makes a service specification\
      \ available to a catalog. A\nServiceCandidate and its associated service specification\
      \ may be published - made visible - in any number of service catalogs, or in\
      \ none. One service specification can be composed of other service specifications.\n\
      Skipped properties: id,href"
    example:
      lifecycleStatus: "lifecycleStatus"
      '@baseType': "@baseType"
      validFor:
        startDateTime: "2000-01-23T04:56:07.000+00:00"
        endDateTime: "2000-01-23T04:56:07.000+00:00"
      '@type': "@type"
      lastUpdate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      serviceSpecification:
        targetServiceSchema:
          '@baseType': "@baseType"
          '@type': "@type"
          '@schemaLocation': "@schemaLocation"
        '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      description: "description"
      category:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
      version: "version"
  ServiceCandidate_Update:
    type: "object"
    properties:
      description:
        type: "string"
        description: "Description of this REST resource"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status of the service\
          \ candidate."
      name:
        type: "string"
        description: "Name given to this REST resource"
      version:
        type: "string"
        description: "the version of service candidate"
      category:
        type: "array"
        description: "List of categories for this candidate"
        items:
          $ref: "#/definitions/ServiceCategoryRef"
      serviceSpecification:
        description: "The service specification implied by this candidate"
        $ref: "#/definitions/ServiceSpecificationRef"
      validFor:
        description: "The period for which this REST resource is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "ServiceCandidate is an entity that makes a service specification\
      \ available to a catalog. A\nServiceCandidate and its associated service specification\
      \ may be published - made visible - in any number of service catalogs, or in\
      \ none. One service specification can be composed of other service specifications.\n\
      Skipped properties: id,href,lastUpdate"
    example:
      lifecycleStatus: "lifecycleStatus"
      '@baseType': "@baseType"
      validFor:
        startDateTime: "2000-01-23T04:56:07.000+00:00"
        endDateTime: "2000-01-23T04:56:07.000+00:00"
      '@type': "@type"
      name: "name"
      serviceSpecification:
        targetServiceSchema:
          '@baseType': "@baseType"
          '@type': "@type"
          '@schemaLocation': "@schemaLocation"
        '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      description: "description"
      category:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
      version: "version"
  ServiceCandidateRef:
    type: "object"
    required:
    - "href"
    - "id"
    properties:
      id:
        type: "string"
        description: "Unique identifier of the service candidate"
      href:
        type: "string"
        description: "Unique reference of the service candidate"
      name:
        type: "string"
        description: "Name of the service candidate"
      version:
        type: "string"
        description: "Version of the service candidate"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "ServiceCandidate reference. ServiceCandidate is an entity that makes\
      \ a ServiceSpecification available to a catalog."
    example:
      '@referredType': "@referredType"
      '@baseType': "@baseType"
      '@type': "@type"
      name: "name"
      id: "id"
      href: "href"
      '@schemaLocation': "http://example.com/aeiou"
      version: "version"
  ServiceCatalog:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique identifier of the ServiceCatalog"
      href:
        type: "string"
        description: "Unique reference of the service catalog"
      description:
        type: "string"
        description: "Description of this catalog"
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "Date and time of the last update"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status"
      name:
        type: "string"
        description: "Name of the service catalog"
      version:
        type: "string"
        description: "ServiceCatalog version"
      category:
        type: "array"
        description: "List of service categories associated with this catalog"
        items:
          $ref: "#/definitions/ServiceCategoryRef"
      relatedParty:
        type: "array"
        description: "List of parties or party roles related to this category"
        items:
          $ref: "#/definitions/RelatedParty"
      validFor:
        description: "The period for which the service catalog is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "The root entity for service catalog management.\nA service catalog\
      \ is a group of service specifications made available through service candidates\
      \ that an organization provides to the consumers (internal consumers like its\
      \ employees or B2B customers or B2C customers). \nA service catalog typically\
      \ includes name, description and time period that is valid for. It will have\
      \ a list of ServiceCandidate catalog items. A ServiceCandidate is an entity\
      \ that makes a ServiceSpecification available to a catalog.\nA ServiceCandidate\
      \ and its associated ServiceSpecification may be \"published\" - made visible\
      \ -in any number of ServiceCatalogs, or in none."
    example:
      lifecycleStatus: "lifecycleStatus"
      validFor:
        startDateTime: "2000-01-23T04:56:07.000+00:00"
        endDateTime: "2000-01-23T04:56:07.000+00:00"
      '@type': "@type"
      description: "description"
      relatedParty:
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "@schemaLocation"
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "@schemaLocation"
      version: "version"
      '@baseType': "@baseType"
      lastUpdate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      id: "id"
      href: "href"
      category:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
  ServiceCatalog_Create:
    type: "object"
    required:
    - "name"
    properties:
      description:
        type: "string"
        description: "Description of this catalog"
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "Date and time of the last update"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status"
      name:
        type: "string"
        description: "Name of the service catalog"
      version:
        type: "string"
        description: "ServiceCatalog version"
      category:
        type: "array"
        description: "List of service categories associated with this catalog"
        items:
          $ref: "#/definitions/ServiceCategoryRef"
      relatedParty:
        type: "array"
        description: "List of parties or party roles related to this category"
        items:
          $ref: "#/definitions/RelatedParty"
      validFor:
        description: "The period for which the service catalog is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "The root entity for service catalog management.\nA service catalog\
      \ is a group of service specifications made available through service candidates\
      \ that an organization provides to the consumers (internal consumers like its\
      \ employees or B2B customers or B2C customers). \nA service catalog typically\
      \ includes name, description and time period that is valid for. It will have\
      \ a list of ServiceCandidate catalog items. A ServiceCandidate is an entity\
      \ that makes a ServiceSpecification available to a catalog.\nA ServiceCandidate\
      \ and its associated ServiceSpecification may be \"published\" - made visible\
      \ -in any number of ServiceCatalogs, or in none.\nSkipped properties: id,href"
    example:
      lifecycleStatus: "lifecycleStatus"
      '@baseType': "@baseType"
      validFor:
        startDateTime: "2000-01-23T04:56:07.000+00:00"
        endDateTime: "2000-01-23T04:56:07.000+00:00"
      '@type': "@type"
      lastUpdate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      description: "description"
      category:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      relatedParty:
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "@schemaLocation"
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "@schemaLocation"
      '@schemaLocation': "http://example.com/aeiou"
      version: "version"
  ServiceCatalog_Update:
    type: "object"
    properties:
      description:
        type: "string"
        description: "Description of this catalog"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status"
      name:
        type: "string"
        description: "Name of the service catalog"
      version:
        type: "string"
        description: "ServiceCatalog version"
      category:
        type: "array"
        description: "List of service categories associated with this catalog"
        items:
          $ref: "#/definitions/ServiceCategoryRef"
      relatedParty:
        type: "array"
        description: "List of parties or party roles related to this category"
        items:
          $ref: "#/definitions/RelatedParty"
      validFor:
        description: "The period for which the service catalog is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "The root entity for service catalog management.\nA service catalog\
      \ is a group of service specifications made available through service candidates\
      \ that an organization provides to the consumers (internal consumers like its\
      \ employees or B2B customers or B2C customers). \nA service catalog typically\
      \ includes name, description and time period that is valid for. It will have\
      \ a list of ServiceCandidate catalog items. A ServiceCandidate is an entity\
      \ that makes a ServiceSpecification available to a catalog.\nA ServiceCandidate\
      \ and its associated ServiceSpecification may be \"published\" - made visible\
      \ -in any number of ServiceCatalogs, or in none.\nSkipped properties: id,href,lastUpdate"
    example:
      lifecycleStatus: "lifecycleStatus"
      '@baseType': "@baseType"
      validFor:
        startDateTime: "2000-01-23T04:56:07.000+00:00"
        endDateTime: "2000-01-23T04:56:07.000+00:00"
      '@type': "@type"
      name: "name"
      description: "description"
      category:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      relatedParty:
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "@schemaLocation"
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "@schemaLocation"
      '@schemaLocation': "http://example.com/aeiou"
      version: "version"
  ServiceCategory:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique identifier of the category"
      href:
        type: "string"
        description: "Reference of the category"
      description:
        type: "string"
        description: "Description of the category"
      isRoot:
        type: "boolean"
        description: "If true, this Boolean indicates that the category is a root\
          \ of categories"
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "Date and time of the last update"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status"
      name:
        type: "string"
        description: "Name of the category"
      parentId:
        type: "string"
        description: "Unique identifier of the parent category"
      version:
        type: "string"
        description: "ServiceCategory version"
      category:
        type: "array"
        description: "List of child categories in the tree for in this category"
        items:
          $ref: "#/definitions/ServiceCategoryRef"
      serviceCandidate:
        type: "array"
        description: "List of service candidates associated with this category"
        items:
          $ref: "#/definitions/ServiceCandidateRef"
      validFor:
        description: "The period for which the category is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "The (service) category resource is used to group service candidates\
      \ in logical containers. Categories can contain other categories."
    example:
      isRoot: true
      lifecycleStatus: "lifecycleStatus"
      serviceCandidate:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      validFor:
        startDateTime: "2000-01-23T04:56:07.000+00:00"
        endDateTime: "2000-01-23T04:56:07.000+00:00"
      '@type': "@type"
      description: "description"
      version: "version"
      parentId: "parentId"
      '@baseType': "@baseType"
      lastUpdate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      id: "id"
      href: "href"
      category:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
  ServiceCategory_Create:
    type: "object"
    required:
    - "name"
    properties:
      description:
        type: "string"
        description: "Description of the category"
      isRoot:
        type: "boolean"
        description: "If true, this Boolean indicates that the category is a root\
          \ of categories"
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "Date and time of the last update"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status"
      name:
        type: "string"
        description: "Name of the category"
      parentId:
        type: "string"
        description: "Unique identifier of the parent category"
      version:
        type: "string"
        description: "ServiceCategory version"
      category:
        type: "array"
        description: "List of child categories in the tree for in this category"
        items:
          $ref: "#/definitions/ServiceCategoryRef"
      serviceCandidate:
        type: "array"
        description: "List of service candidates associated with this category"
        items:
          $ref: "#/definitions/ServiceCandidateRef"
      validFor:
        description: "The period for which the category is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "The (service) category resource is used to group service candidates\
      \ in logical containers. Categories can contain other categories.\nSkipped properties:\
      \ id,href"
    example:
      isRoot: true
      lifecycleStatus: "lifecycleStatus"
      serviceCandidate:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      validFor:
        startDateTime: "2000-01-23T04:56:07.000+00:00"
        endDateTime: "2000-01-23T04:56:07.000+00:00"
      '@type': "@type"
      description: "description"
      version: "version"
      parentId: "parentId"
      '@baseType': "@baseType"
      lastUpdate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      category:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
  ServiceCategory_Update:
    type: "object"
    properties:
      description:
        type: "string"
        description: "Description of the category"
      isRoot:
        type: "boolean"
        description: "If true, this Boolean indicates that the category is a root\
          \ of categories"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status"
      name:
        type: "string"
        description: "Name of the category"
      parentId:
        type: "string"
        description: "Unique identifier of the parent category"
      version:
        type: "string"
        description: "ServiceCategory version"
      category:
        type: "array"
        description: "List of child categories in the tree for in this category"
        items:
          $ref: "#/definitions/ServiceCategoryRef"
      serviceCandidate:
        type: "array"
        description: "List of service candidates associated with this category"
        items:
          $ref: "#/definitions/ServiceCandidateRef"
      validFor:
        description: "The period for which the category is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "The (service) category resource is used to group service candidates\
      \ in logical containers. Categories can contain other categories.\nSkipped properties:\
      \ id,href,lastUpdate"
    example:
      isRoot: true
      lifecycleStatus: "lifecycleStatus"
      '@baseType': "@baseType"
      serviceCandidate:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      validFor:
        startDateTime: "2000-01-23T04:56:07.000+00:00"
        endDateTime: "2000-01-23T04:56:07.000+00:00"
      '@type': "@type"
      name: "name"
      description: "description"
      category:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
      version: "version"
      parentId: "parentId"
  ServiceCategoryRef:
    type: "object"
    required:
    - "href"
    - "id"
    properties:
      id:
        type: "string"
        description: "Unique identifier of category"
      href:
        type: "string"
        description: "Hypertext Reference of the category"
      name:
        type: "string"
        description: "Name of the category."
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "The (service) category resource is used to group service candidates\
      \ in logical containers. Categories can contain other categories."
    example:
      '@referredType': "@referredType"
      '@baseType': "@baseType"
      '@type': "@type"
      name: "name"
      id: "id"
      href: "href"
      '@schemaLocation': "http://example.com/aeiou"
  ServiceLevelSpecificationRef:
    type: "object"
    required:
    - "href"
    - "id"
    properties:
      id:
        type: "string"
        description: "The identifier to a service level specification."
      href:
        type: "string"
        description: "The hyperlink to access a service level specification."
      name:
        type: "string"
        description: "The name of Service Level Specification"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "A Service Level Specification represents a pre-defined or negotiated\
      \ set of Service Level \nObjectives. In addition, certain consequences are associated\
      \ with not meeting the Service Level \nObjectives. Service Level Agreements\
      \ are expressed in terms of Service Level Specifications."
    example:
      '@referredType': "@referredType"
      '@baseType': "@baseType"
      '@type': "@type"
      name: "name"
      id: "id"
      href: "href"
      '@schemaLocation': "http://example.com/aeiou"
  ServiceSpecCharRelationship:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique identifier of the target specification"
      href:
        type: "string"
        description: "Hyperlink reference to the target specification"
      name:
        type: "string"
        description: "Name of the target  characteristic"
      relationshipType:
        type: "string"
        description: "Type of relationship such as aggregation, migration, substitution,\
          \ dependency, exclusivity"
      role:
        type: "string"
        description: "The association role for this service specification"
      validFor:
        description: "The period for which the serviceSpecCharRelationship is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "An aggregation, migration, substitution, dependency or exclusivity\
      \ relationship between/among serviceSpecCharacteristics."
    example:
      role: "role"
      relationshipType: "relationshipType"
      '@baseType': "@baseType"
      validFor:
        startDateTime: "2000-01-23T04:56:07.000+00:00"
        endDateTime: "2000-01-23T04:56:07.000+00:00"
      '@type': "@type"
      name: "name"
      id: "id"
      href: "href"
      '@schemaLocation': "http://example.com/aeiou"
  ServiceSpecCharacteristic:
    type: "object"
    properties:
      configurable:
        type: "boolean"
        description: "If true, the Boolean indicates that the serviceSpecCharacteristic\
          \ is configurable"
      description:
        type: "string"
        description: "A narrative that explains in detail what the serviceSpecCharacteristic\
          \ is"
      extensible:
        type: "boolean"
        description: "An indicator that specifies that the values for the characteristic\
          \ can be extended by adding new values when instantiating a characteristic\
          \ for an Entity."
      isUnique:
        type: "boolean"
        description: "An indicator that specifies if a value is unique for the specification.\
          \ Possible values are; \"unique while value is in effect\" and \"unique\
          \ whether value is in effect or not\""
      maxCardinality:
        type: "integer"
        description: "The maximum number of instances a CharacteristicValue can take\
          \ on. For example, zero to five phone numbers in a group calling plan, where\
          \ five is the value for the maxCardinality."
      minCardinality:
        type: "integer"
        description: "The minimum number of instances a CharacteristicValue can take\
          \ on. For example, zero to five phone numbers in a group calling plan, where\
          \ zero is the value for the minCardinality."
      name:
        type: "string"
        description: "A word, term, or phrase by which this characteristic specification\
          \ is known and distinguished from other characteristic specifications."
      regex:
        type: "string"
        description: "A rule or principle represented in regular expression used to\
          \ derive the value of a characteristic value."
      valueType:
        type: "string"
        description: "A kind of value that the characteristic can take on, such as\
          \ numeric, text and so forth"
      serviceSpecCharRelationship:
        type: "array"
        description: "A list of service spec char relationships (ServiceSpecCharRelationship\
          \ [*]). An aggregation, migration, substitution, dependency or exclusivity\
          \ relationship between/among Specification Characteristics."
        items:
          $ref: "#/definitions/ServiceSpecCharRelationship"
      serviceSpecCharacteristicValue:
        type: "array"
        description: "A list of service spec characteristic values (ServiceSpecCharacteristicValue\
          \ [*]). A ServiceSpecCharacteristicValue object is used to define a set\
          \ of attributes, each of which can be assigned to a corresponding set of\
          \ attributes in a ServiceSpecCharacteristic object. The values of the attributes\
          \ in the ServiceSpecCharacteristicValue object describe the values of the\
          \ attributes that a corresponding ServiceSpecCharacteristic object can take\
          \ on."
        items:
          $ref: "#/definitions/ServiceSpecCharacteristicValue"
      validFor:
        description: "The period for which the serviceSpecCharacteristic is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
      '@valueSchemaLocation':
        type: "string"
        description: "This (optional) field provides a link to the schema describing\
          \ the value type."
    description: "This class represents the key features of this service specification.\
      \ For example, bandwidth is a characteristic of many different types of services;\
      \ if bandwidth is a relevant characteristic (e.g., from the point-of-view of\
      \ a Customer obtaining this Service via a Product) then bandwidth would be a\
      \ ServiceSpecCharacteristic for that particular Service."
    example:
      validFor:
        startDateTime: "2000-01-23T04:56:07.000+00:00"
        endDateTime: "2000-01-23T04:56:07.000+00:00"
      '@type': "@type"
      '@valueSchemaLocation': "@valueSchemaLocation"
      isUnique: true
      description: "description"
      serviceSpecCharacteristicValue:
      - rangeInterval: "rangeInterval"
        isDefault: true
        regex: "regex"
        valueTo: 5
        unitOfMeasure: "unitOfMeasure"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        valueType: "valueType"
        '@schemaLocation': "http://example.com/aeiou"
        value: ""
        valueFrom: 1
      - rangeInterval: "rangeInterval"
        isDefault: true
        regex: "regex"
        valueTo: 5
        unitOfMeasure: "unitOfMeasure"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        valueType: "valueType"
        '@schemaLocation': "http://example.com/aeiou"
        value: ""
        valueFrom: 1
      maxCardinality: 0
      minCardinality: 6
      serviceSpecCharRelationship:
      - role: "role"
        relationshipType: "relationshipType"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      - role: "role"
        relationshipType: "relationshipType"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      regex: "regex"
      '@baseType': "@baseType"
      valueType: "valueType"
      name: "name"
      '@schemaLocation': "http://example.com/aeiou"
      extensible: true
      configurable: true
  ServiceSpecCharacteristicValue:
    type: "object"
    properties:
      isDefault:
        type: "boolean"
        description: "Indicates if the value is the default value for a characteristic"
      rangeInterval:
        type: "string"
        description: "An indicator that specifies the inclusion or exclusion of the\
          \ valueFrom and valueTo attributes. If applicable, possible values are \"\
          open\", \"closed\", \"closedBottom\" and \"closedTop\"."
      regex:
        type: "string"
        description: "A regular expression constraint for given value"
      unitOfMeasure:
        type: "string"
        description: "A length, surface, volume, dry measure, liquid measure, money,\
          \ weight, time, and the like. In general, a determinate quantity or magnitude\
          \ of the kind designated, taken as a standard of comparison for others of\
          \ the same kind, in assigning to them numerical values, as 1 foot, 1 yard,\
          \ 1 mile, 1 square foot."
      valueFrom:
        type: "integer"
        description: "The low range value that a characteristic can take on"
      valueTo:
        type: "integer"
        description: "The upper range value that a characteristic can take on"
      valueType:
        type: "string"
        description: "A kind of value that the characteristic can take on, such as\
          \ numeric, text, and so forth"
      validFor:
        description: "The period of time for which a value is applicable"
        $ref: "#/definitions/TimePeriod"
      value:
        description: "A discrete value that the characteristic can take on"
        $ref: "#/definitions/object"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "A ServiceSpecCharacteristicValue object is used to define a set\
      \ of attributes, each of which can be assigned to a corresponding set of attributes\
      \ in a ServiceSpecCharacteristic object. The values of the attributes in the\
      \ ServiceSpecCharacteristicValue object describe the values of the attributes\
      \ that a corresponding ServiceSpecCharacteristic object can take on."
    example:
      rangeInterval: "rangeInterval"
      isDefault: true
      regex: "regex"
      valueTo: 5
      unitOfMeasure: "unitOfMeasure"
      '@baseType': "@baseType"
      validFor:
        startDateTime: "2000-01-23T04:56:07.000+00:00"
        endDateTime: "2000-01-23T04:56:07.000+00:00"
      '@type': "@type"
      valueType: "valueType"
      '@schemaLocation': "http://example.com/aeiou"
      value: ""
      valueFrom: 1
  ServiceSpecRelationship:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique identifier of the target serviceSpecification"
      href:
        type: "string"
        description: "Reference of the target serviceSpecification"
      name:
        type: "string"
        description: "The name given to the target service specification instance"
      relationshipType:
        type: "string"
        description: "Type of relationship such as migration, substitution, dependency,\
          \ exclusivity"
      role:
        type: "string"
        description: "The association role for this service specification"
      validFor:
        description: "The period for which the serviceSpecRelationship is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "A migration, substitution, dependency or exclusivity relationship\
      \ between/among service specifications."
    example:
      role: "role"
      relationshipType: "relationshipType"
      '@baseType': "@baseType"
      validFor:
        startDateTime: "2000-01-23T04:56:07.000+00:00"
        endDateTime: "2000-01-23T04:56:07.000+00:00"
      '@type': "@type"
      name: "name"
      id: "id"
      href: "href"
      '@schemaLocation': "http://example.com/aeiou"
  ServiceSpecification:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique identifier of the service specification"
      href:
        type: "string"
        description: "Reference of the service specification"
      description:
        type: "string"
        description: "A narrative that explains in detail what the service specification\
          \ is"
      isBundle:
        type: "boolean"
        description: "isBundle determines whether a ServiceSpecification represents\
          \ a single ServiceSpecification (false), or a bundle of ServiceSpecification\
          \ (true)."
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "Date and time of the last update of the service specification"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status of the service\
          \ specification"
      name:
        type: "string"
        description: "Name of the service specification"
      version:
        type: "string"
        description: "Service specification version"
      attachment:
        type: "array"
        description: "A list of attachments (Attachment [*]). Complements the description\
          \ of the specification through video, pictures..."
        items:
          $ref: "#/definitions/AttachmentRef"
      relatedParty:
        type: "array"
        description: "A list of related party references (RelatedParty [*]). A related\
          \ party defines party or party role linked to a specific entity."
        items:
          $ref: "#/definitions/RelatedParty"
      resourceSpecification:
        type: "array"
        description: "A list of resource specification references (ResourceSpecificationRef\
          \ [*]). The ResourceSpecification is required for a service specification\
          \ with type ResourceFacingServiceSpecification (RFSS)."
        items:
          $ref: "#/definitions/ResourceSpecificationRef"
      serviceLevelSpecification:
        type: "array"
        description: "A list of service level specifications related to this service\
          \ specification, and which will need to be satisifiable for corresponding\
          \ service instances; e.g. Gold, Platinum"
        items:
          $ref: "#/definitions/ServiceLevelSpecificationRef"
      serviceSpecCharacteristic:
        type: "array"
        description: "A list of service spec characteristics (ServiceSpecCharacteristic\
          \ [*]). This class represents the key features of this service specification."
        items:
          $ref: "#/definitions/ServiceSpecCharacteristic"
      serviceSpecRelationship:
        type: "array"
        description: "A list of service specifications related to this specification,\
          \ e.g. migration, substitution, dependency or exclusivity relationship"
        items:
          $ref: "#/definitions/ServiceSpecRelationship"
      targetServiceSchema:
        description: "A target service schema reference (TargetServiceSchemaRef).\
          \ The reference object to the schema and type of target service which is\
          \ described by service specification."
        $ref: "#/definitions/TargetServiceSchema"
      validFor:
        description: "The period for which the service specification is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "ServiceSpecification is a class that offers characteristics to describe\
      \ a type of service.\nFunctionally, it acts as a template by which Services\
      \ may be instantiated. By sharing the same  specification, these services would\
      \ therefore share the same set of characteristics."
    example:
      isBundle: true
      targetServiceSchema:
        '@baseType': "@baseType"
        '@type': "@type"
        '@schemaLocation': "@schemaLocation"
      lifecycleStatus: "lifecycleStatus"
      serviceLevelSpecification:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      validFor:
        startDateTime: "2000-01-23T04:56:07.000+00:00"
        endDateTime: "2000-01-23T04:56:07.000+00:00"
      '@type': "@type"
      resourceSpecification:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      description: "description"
      relatedParty:
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "@schemaLocation"
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "@schemaLocation"
      version: "version"
      attachment:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        description: "description"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
        url: "url"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        description: "description"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
        url: "url"
      '@baseType': "@baseType"
      lastUpdate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      id: "id"
      href: "href"
      '@schemaLocation': "http://example.com/aeiou"
      serviceSpecCharacteristic:
      - validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        '@valueSchemaLocation': "@valueSchemaLocation"
        isUnique: true
        description: "description"
        serviceSpecCharacteristicValue:
        - rangeInterval: "rangeInterval"
          isDefault: true
          regex: "regex"
          valueTo: 5
          unitOfMeasure: "unitOfMeasure"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          valueType: "valueType"
          '@schemaLocation': "http://example.com/aeiou"
          value: ""
          valueFrom: 1
        - rangeInterval: "rangeInterval"
          isDefault: true
          regex: "regex"
          valueTo: 5
          unitOfMeasure: "unitOfMeasure"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          valueType: "valueType"
          '@schemaLocation': "http://example.com/aeiou"
          value: ""
          valueFrom: 1
        maxCardinality: 0
        minCardinality: 6
        serviceSpecCharRelationship:
        - role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        regex: "regex"
        '@baseType': "@baseType"
        valueType: "valueType"
        name: "name"
        '@schemaLocation': "http://example.com/aeiou"
        extensible: true
        configurable: true
      - validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        '@valueSchemaLocation': "@valueSchemaLocation"
        isUnique: true
        description: "description"
        serviceSpecCharacteristicValue:
        - rangeInterval: "rangeInterval"
          isDefault: true
          regex: "regex"
          valueTo: 5
          unitOfMeasure: "unitOfMeasure"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          valueType: "valueType"
          '@schemaLocation': "http://example.com/aeiou"
          value: ""
          valueFrom: 1
        - rangeInterval: "rangeInterval"
          isDefault: true
          regex: "regex"
          valueTo: 5
          unitOfMeasure: "unitOfMeasure"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          valueType: "valueType"
          '@schemaLocation': "http://example.com/aeiou"
          value: ""
          valueFrom: 1
        maxCardinality: 0
        minCardinality: 6
        serviceSpecCharRelationship:
        - role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        regex: "regex"
        '@baseType': "@baseType"
        valueType: "valueType"
        name: "name"
        '@schemaLocation': "http://example.com/aeiou"
        extensible: true
        configurable: true
      serviceSpecRelationship:
      - role: "role"
        relationshipType: "relationshipType"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      - role: "role"
        relationshipType: "relationshipType"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
  ServiceSpecification_Create:
    type: "object"
    required:
    - "name"
    properties:
      description:
        type: "string"
        description: "A narrative that explains in detail what the service specification\
          \ is"
      isBundle:
        type: "boolean"
        description: "isBundle determines whether a ServiceSpecification represents\
          \ a single ServiceSpecification (false), or a bundle of ServiceSpecification\
          \ (true)."
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "Date and time of the last update of the service specification"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status of the service\
          \ specification"
      name:
        type: "string"
        description: "Name of the service specification"
      version:
        type: "string"
        description: "Service specification version"
      attachment:
        type: "array"
        description: "A list of attachments (Attachment [*]). Complements the description\
          \ of the specification through video, pictures..."
        items:
          $ref: "#/definitions/AttachmentRef"
      relatedParty:
        type: "array"
        description: "A list of related party references (RelatedParty [*]). A related\
          \ party defines party or party role linked to a specific entity."
        items:
          $ref: "#/definitions/RelatedParty"
      resourceSpecification:
        type: "array"
        description: "A list of resource specification references (ResourceSpecificationRef\
          \ [*]). The ResourceSpecification is required for a service specification\
          \ with type ResourceFacingServiceSpecification (RFSS)."
        items:
          $ref: "#/definitions/ResourceSpecificationRef"
      serviceLevelSpecification:
        type: "array"
        description: "A list of service level specifications related to this service\
          \ specification, and which will need to be satisifiable for corresponding\
          \ service instances; e.g. Gold, Platinum"
        items:
          $ref: "#/definitions/ServiceLevelSpecificationRef"
      serviceSpecCharacteristic:
        type: "array"
        description: "A list of service spec characteristics (ServiceSpecCharacteristic\
          \ [*]). This class represents the key features of this service specification."
        items:
          $ref: "#/definitions/ServiceSpecCharacteristic"
      serviceSpecRelationship:
        type: "array"
        description: "A list of service specifications related to this specification,\
          \ e.g. migration, substitution, dependency or exclusivity relationship"
        items:
          $ref: "#/definitions/ServiceSpecRelationship"
      targetServiceSchema:
        description: "A target service schema reference (TargetServiceSchemaRef).\
          \ The reference object to the schema and type of target service which is\
          \ described by service specification."
        $ref: "#/definitions/TargetServiceSchema"
      validFor:
        description: "The period for which the service specification is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "ServiceSpecification is a class that offers characteristics to describe\
      \ a type of service.\nFunctionally, it acts as a template by which Services\
      \ may be instantiated. By sharing the same  specification, these services would\
      \ therefore share the same set of characteristics.\nSkipped properties: id,href"
    example:
      isBundle: true
      targetServiceSchema:
        '@baseType': "@baseType"
        '@type': "@type"
        '@schemaLocation': "@schemaLocation"
      lifecycleStatus: "lifecycleStatus"
      serviceLevelSpecification:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      validFor:
        startDateTime: "2000-01-23T04:56:07.000+00:00"
        endDateTime: "2000-01-23T04:56:07.000+00:00"
      '@type': "@type"
      resourceSpecification:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      description: "description"
      relatedParty:
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "@schemaLocation"
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "@schemaLocation"
      version: "version"
      attachment:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        description: "description"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
        url: "url"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        description: "description"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
        url: "url"
      '@baseType': "@baseType"
      lastUpdate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      '@schemaLocation': "http://example.com/aeiou"
      serviceSpecCharacteristic:
      - validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        '@valueSchemaLocation': "@valueSchemaLocation"
        isUnique: true
        description: "description"
        serviceSpecCharacteristicValue:
        - rangeInterval: "rangeInterval"
          isDefault: true
          regex: "regex"
          valueTo: 5
          unitOfMeasure: "unitOfMeasure"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          valueType: "valueType"
          '@schemaLocation': "http://example.com/aeiou"
          value: ""
          valueFrom: 1
        - rangeInterval: "rangeInterval"
          isDefault: true
          regex: "regex"
          valueTo: 5
          unitOfMeasure: "unitOfMeasure"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          valueType: "valueType"
          '@schemaLocation': "http://example.com/aeiou"
          value: ""
          valueFrom: 1
        maxCardinality: 0
        minCardinality: 6
        serviceSpecCharRelationship:
        - role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        regex: "regex"
        '@baseType': "@baseType"
        valueType: "valueType"
        name: "name"
        '@schemaLocation': "http://example.com/aeiou"
        extensible: true
        configurable: true
      - validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        '@valueSchemaLocation': "@valueSchemaLocation"
        isUnique: true
        description: "description"
        serviceSpecCharacteristicValue:
        - rangeInterval: "rangeInterval"
          isDefault: true
          regex: "regex"
          valueTo: 5
          unitOfMeasure: "unitOfMeasure"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          valueType: "valueType"
          '@schemaLocation': "http://example.com/aeiou"
          value: ""
          valueFrom: 1
        - rangeInterval: "rangeInterval"
          isDefault: true
          regex: "regex"
          valueTo: 5
          unitOfMeasure: "unitOfMeasure"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          valueType: "valueType"
          '@schemaLocation': "http://example.com/aeiou"
          value: ""
          valueFrom: 1
        maxCardinality: 0
        minCardinality: 6
        serviceSpecCharRelationship:
        - role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        regex: "regex"
        '@baseType': "@baseType"
        valueType: "valueType"
        name: "name"
        '@schemaLocation': "http://example.com/aeiou"
        extensible: true
        configurable: true
      serviceSpecRelationship:
      - role: "role"
        relationshipType: "relationshipType"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      - role: "role"
        relationshipType: "relationshipType"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
  ServiceSpecification_Update:
    type: "object"
    properties:
      description:
        type: "string"
        description: "A narrative that explains in detail what the service specification\
          \ is"
      isBundle:
        type: "boolean"
        description: "isBundle determines whether a ServiceSpecification represents\
          \ a single ServiceSpecification (false), or a bundle of ServiceSpecification\
          \ (true)."
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status of the service\
          \ specification"
      name:
        type: "string"
        description: "Name of the service specification"
      version:
        type: "string"
        description: "Service specification version"
      attachment:
        type: "array"
        description: "A list of attachments (Attachment [*]). Complements the description\
          \ of the specification through video, pictures..."
        items:
          $ref: "#/definitions/AttachmentRef"
      relatedParty:
        type: "array"
        description: "A list of related party references (RelatedParty [*]). A related\
          \ party defines party or party role linked to a specific entity."
        items:
          $ref: "#/definitions/RelatedParty"
      resourceSpecification:
        type: "array"
        description: "A list of resource specification references (ResourceSpecificationRef\
          \ [*]). The ResourceSpecification is required for a service specification\
          \ with type ResourceFacingServiceSpecification (RFSS)."
        items:
          $ref: "#/definitions/ResourceSpecificationRef"
      serviceLevelSpecification:
        type: "array"
        description: "A list of service level specifications related to this service\
          \ specification, and which will need to be satisifiable for corresponding\
          \ service instances; e.g. Gold, Platinum"
        items:
          $ref: "#/definitions/ServiceLevelSpecificationRef"
      serviceSpecCharacteristic:
        type: "array"
        description: "A list of service spec characteristics (ServiceSpecCharacteristic\
          \ [*]). This class represents the key features of this service specification."
        items:
          $ref: "#/definitions/ServiceSpecCharacteristic"
      serviceSpecRelationship:
        type: "array"
        description: "A list of service specifications related to this specification,\
          \ e.g. migration, substitution, dependency or exclusivity relationship"
        items:
          $ref: "#/definitions/ServiceSpecRelationship"
      targetServiceSchema:
        description: "A target service schema reference (TargetServiceSchemaRef).\
          \ The reference object to the schema and type of target service which is\
          \ described by service specification."
        $ref: "#/definitions/TargetServiceSchema"
      validFor:
        description: "The period for which the service specification is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "ServiceSpecification is a class that offers characteristics to describe\
      \ a type of service.\nFunctionally, it acts as a template by which Services\
      \ may be instantiated. By sharing the same  specification, these services would\
      \ therefore share the same set of characteristics.\nSkipped properties: id,href,lastUpdate"
    example:
      isBundle: true
      targetServiceSchema:
        '@baseType': "@baseType"
        '@type': "@type"
        '@schemaLocation': "@schemaLocation"
      lifecycleStatus: "lifecycleStatus"
      serviceLevelSpecification:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      validFor:
        startDateTime: "2000-01-23T04:56:07.000+00:00"
        endDateTime: "2000-01-23T04:56:07.000+00:00"
      '@type': "@type"
      resourceSpecification:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      description: "description"
      relatedParty:
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "@schemaLocation"
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "@schemaLocation"
      version: "version"
      attachment:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        description: "description"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
        url: "url"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        description: "description"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
        url: "url"
      '@baseType': "@baseType"
      name: "name"
      '@schemaLocation': "http://example.com/aeiou"
      serviceSpecCharacteristic:
      - validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        '@valueSchemaLocation': "@valueSchemaLocation"
        isUnique: true
        description: "description"
        serviceSpecCharacteristicValue:
        - rangeInterval: "rangeInterval"
          isDefault: true
          regex: "regex"
          valueTo: 5
          unitOfMeasure: "unitOfMeasure"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          valueType: "valueType"
          '@schemaLocation': "http://example.com/aeiou"
          value: ""
          valueFrom: 1
        - rangeInterval: "rangeInterval"
          isDefault: true
          regex: "regex"
          valueTo: 5
          unitOfMeasure: "unitOfMeasure"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          valueType: "valueType"
          '@schemaLocation': "http://example.com/aeiou"
          value: ""
          valueFrom: 1
        maxCardinality: 0
        minCardinality: 6
        serviceSpecCharRelationship:
        - role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        regex: "regex"
        '@baseType': "@baseType"
        valueType: "valueType"
        name: "name"
        '@schemaLocation': "http://example.com/aeiou"
        extensible: true
        configurable: true
      - validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        '@valueSchemaLocation': "@valueSchemaLocation"
        isUnique: true
        description: "description"
        serviceSpecCharacteristicValue:
        - rangeInterval: "rangeInterval"
          isDefault: true
          regex: "regex"
          valueTo: 5
          unitOfMeasure: "unitOfMeasure"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          valueType: "valueType"
          '@schemaLocation': "http://example.com/aeiou"
          value: ""
          valueFrom: 1
        - rangeInterval: "rangeInterval"
          isDefault: true
          regex: "regex"
          valueTo: 5
          unitOfMeasure: "unitOfMeasure"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          valueType: "valueType"
          '@schemaLocation': "http://example.com/aeiou"
          value: ""
          valueFrom: 1
        maxCardinality: 0
        minCardinality: 6
        serviceSpecCharRelationship:
        - role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        regex: "regex"
        '@baseType': "@baseType"
        valueType: "valueType"
        name: "name"
        '@schemaLocation': "http://example.com/aeiou"
        extensible: true
        configurable: true
      serviceSpecRelationship:
      - role: "role"
        relationshipType: "relationshipType"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      - role: "role"
        relationshipType: "relationshipType"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
  ServiceSpecificationRef:
    type: "object"
    required:
    - "href"
    - "id"
    properties:
      id:
        type: "string"
        description: "Unique identifier of the service specification"
      href:
        type: "string"
        description: "Reference of the serviceSpecification"
      name:
        type: "string"
        description: "Name of the requiredServiceSpecification"
      version:
        type: "string"
        description: "Service specification version"
      targetServiceSchema:
        description: "A target service schema reference (TargetServiceSchemaRef).\
          \ The reference object to the schema and type of target service which is\
          \ described by service specification."
        $ref: "#/definitions/TargetServiceSchema"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "Service specification reference: ServiceSpecification(s) required\
      \ to realize a ProductSpecification."
    example:
      targetServiceSchema:
        '@baseType': "@baseType"
        '@type': "@type"
        '@schemaLocation': "@schemaLocation"
      '@referredType': "@referredType"
      '@baseType': "@baseType"
      '@type': "@type"
      name: "name"
      id: "id"
      href: "href"
      '@schemaLocation': "http://example.com/aeiou"
      version: "version"
  TargetServiceSchema:
    type: "object"
    required:
    - "@schemaLocation"
    - "@type"
    properties:
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        description: "This field provides a link to the schema describing the target\
          \ service"
      '@type':
        type: "string"
        description: "Class type of the target service"
    description: "The reference object to the schema and type of target service which\
      \ is described by service specification"
    example:
      '@baseType': "@baseType"
      '@type': "@type"
      '@schemaLocation': "@schemaLocation"
  TimePeriod:
    type: "object"
    properties:
      endDateTime:
        type: "string"
        format: "date-time"
        description: "End of the time period, using IETC-RFC-3339 format"
      startDateTime:
        type: "string"
        format: "date-time"
        description: "Start of the time period, using IETC-RFC-3339 format. If you\
          \ define a start, you must also define an end"
    description: "A period of time, either as a deadline (endDateTime only) a startDateTime\
      \ only, or both"
    example:
      startDateTime: "2000-01-23T04:56:07.000+00:00"
      endDateTime: "2000-01-23T04:56:07.000+00:00"
  EventSubscription:
    type: "object"
    required:
    - "callback"
    - "id"
    properties:
      id:
        type: "string"
        description: "Id of the listener"
      callback:
        type: "string"
        description: "The callback being registered."
      query:
        type: "string"
        description: "additional data to be passed"
    description: "Sets the communication endpoint address the service instance must\
      \ use to deliver notification information"
    example:
      query: "query"
      callback: "callback"
      id: "id"
  EventSubscriptionInput:
    type: "object"
    required:
    - "callback"
    properties:
      callback:
        type: "string"
        description: "The callback being registered."
      query:
        type: "string"
        description: "additional data to be passed"
    description: "Sets the communication endpoint address the service instance must\
      \ use to deliver notification information"
    example:
      query: "query"
      callback: "callback"
  ServiceSpecificationCreateNotification:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "The identifier of the notification"
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurence"
      eventType:
        type: "string"
        description: "The type of the notification"
      fieldPath:
        type: "string"
        description: "The path identifying the object field concerned by this notification"
      resourcePath:
        type: "string"
        description: "The path identifying the resource object concerned by this notification"
      event:
        description: "The event linked to the involved resource object"
        $ref: "#/definitions/ServiceSpecificationCreateEvent"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      resourcePath: "resourcePath"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      fieldPath: "fieldPath"
      eventType: "eventType"
      event:
        serviceSpecification:
          isBundle: true
          targetServiceSchema:
            '@baseType': "@baseType"
            '@type': "@type"
            '@schemaLocation': "@schemaLocation"
          lifecycleStatus: "lifecycleStatus"
          serviceLevelSpecification:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          resourceSpecification:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          description: "description"
          relatedParty:
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "@schemaLocation"
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "@schemaLocation"
          version: "version"
          attachment:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            description: "description"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
            url: "url"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            description: "description"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
            url: "url"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
          serviceSpecCharacteristic:
          - validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            '@valueSchemaLocation': "@valueSchemaLocation"
            isUnique: true
            description: "description"
            serviceSpecCharacteristicValue:
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "2000-01-23T04:56:07.000+00:00"
                endDateTime: "2000-01-23T04:56:07.000+00:00"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: ""
              valueFrom: 1
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "2000-01-23T04:56:07.000+00:00"
                endDateTime: "2000-01-23T04:56:07.000+00:00"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: ""
              valueFrom: 1
            maxCardinality: 0
            minCardinality: 6
            serviceSpecCharRelationship:
            - role: "role"
              relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "2000-01-23T04:56:07.000+00:00"
                endDateTime: "2000-01-23T04:56:07.000+00:00"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            - role: "role"
              relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "2000-01-23T04:56:07.000+00:00"
                endDateTime: "2000-01-23T04:56:07.000+00:00"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            regex: "regex"
            '@baseType': "@baseType"
            valueType: "valueType"
            name: "name"
            '@schemaLocation': "http://example.com/aeiou"
            extensible: true
            configurable: true
          - validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            '@valueSchemaLocation': "@valueSchemaLocation"
            isUnique: true
            description: "description"
            serviceSpecCharacteristicValue:
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "2000-01-23T04:56:07.000+00:00"
                endDateTime: "2000-01-23T04:56:07.000+00:00"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: ""
              valueFrom: 1
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "2000-01-23T04:56:07.000+00:00"
                endDateTime: "2000-01-23T04:56:07.000+00:00"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: ""
              valueFrom: 1
            maxCardinality: 0
            minCardinality: 6
            serviceSpecCharRelationship:
            - role: "role"
              relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "2000-01-23T04:56:07.000+00:00"
                endDateTime: "2000-01-23T04:56:07.000+00:00"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            - role: "role"
              relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "2000-01-23T04:56:07.000+00:00"
                endDateTime: "2000-01-23T04:56:07.000+00:00"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            regex: "regex"
            '@baseType': "@baseType"
            valueType: "valueType"
            name: "name"
            '@schemaLocation': "http://example.com/aeiou"
            extensible: true
            configurable: true
          serviceSpecRelationship:
          - role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
  ServiceSpecificationCreateEvent:
    type: "object"
    properties:
      serviceSpecification:
        description: "The involved resource data for the event"
        $ref: "#/definitions/ServiceSpecification"
    description: "The event data structure"
    example:
      serviceSpecification:
        isBundle: true
        targetServiceSchema:
          '@baseType': "@baseType"
          '@type': "@type"
          '@schemaLocation': "@schemaLocation"
        lifecycleStatus: "lifecycleStatus"
        serviceLevelSpecification:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        resourceSpecification:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        description: "description"
        relatedParty:
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "@schemaLocation"
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "@schemaLocation"
        version: "version"
        attachment:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          description: "description"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
          url: "url"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          description: "description"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
          url: "url"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
        serviceSpecCharacteristic:
        - validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          '@valueSchemaLocation': "@valueSchemaLocation"
          isUnique: true
          description: "description"
          serviceSpecCharacteristicValue:
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: ""
            valueFrom: 1
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: ""
            valueFrom: 1
          maxCardinality: 0
          minCardinality: 6
          serviceSpecCharRelationship:
          - role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          regex: "regex"
          '@baseType': "@baseType"
          valueType: "valueType"
          name: "name"
          '@schemaLocation': "http://example.com/aeiou"
          extensible: true
          configurable: true
        - validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          '@valueSchemaLocation': "@valueSchemaLocation"
          isUnique: true
          description: "description"
          serviceSpecCharacteristicValue:
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: ""
            valueFrom: 1
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: ""
            valueFrom: 1
          maxCardinality: 0
          minCardinality: 6
          serviceSpecCharRelationship:
          - role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          regex: "regex"
          '@baseType': "@baseType"
          valueType: "valueType"
          name: "name"
          '@schemaLocation': "http://example.com/aeiou"
          extensible: true
          configurable: true
        serviceSpecRelationship:
        - role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
  ServiceSpecificationChangeNotification:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "The identifier of the notification"
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurence"
      eventType:
        type: "string"
        description: "The type of the notification"
      fieldPath:
        type: "string"
        description: "The path identifying the object field concerned by this notification"
      resourcePath:
        type: "string"
        description: "The path identifying the resource object concerned by this notification"
      event:
        description: "The event linked to the involved resource object"
        $ref: "#/definitions/ServiceSpecificationChangeEvent"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      resourcePath: "resourcePath"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      fieldPath: "fieldPath"
      eventType: "eventType"
      event:
        serviceSpecification:
          isBundle: true
          targetServiceSchema:
            '@baseType': "@baseType"
            '@type': "@type"
            '@schemaLocation': "@schemaLocation"
          lifecycleStatus: "lifecycleStatus"
          serviceLevelSpecification:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          resourceSpecification:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          description: "description"
          relatedParty:
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "@schemaLocation"
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "@schemaLocation"
          version: "version"
          attachment:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            description: "description"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
            url: "url"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            description: "description"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
            url: "url"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
          serviceSpecCharacteristic:
          - validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            '@valueSchemaLocation': "@valueSchemaLocation"
            isUnique: true
            description: "description"
            serviceSpecCharacteristicValue:
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "2000-01-23T04:56:07.000+00:00"
                endDateTime: "2000-01-23T04:56:07.000+00:00"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: ""
              valueFrom: 1
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "2000-01-23T04:56:07.000+00:00"
                endDateTime: "2000-01-23T04:56:07.000+00:00"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: ""
              valueFrom: 1
            maxCardinality: 0
            minCardinality: 6
            serviceSpecCharRelationship:
            - role: "role"
              relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "2000-01-23T04:56:07.000+00:00"
                endDateTime: "2000-01-23T04:56:07.000+00:00"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            - role: "role"
              relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "2000-01-23T04:56:07.000+00:00"
                endDateTime: "2000-01-23T04:56:07.000+00:00"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            regex: "regex"
            '@baseType': "@baseType"
            valueType: "valueType"
            name: "name"
            '@schemaLocation': "http://example.com/aeiou"
            extensible: true
            configurable: true
          - validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            '@valueSchemaLocation': "@valueSchemaLocation"
            isUnique: true
            description: "description"
            serviceSpecCharacteristicValue:
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "2000-01-23T04:56:07.000+00:00"
                endDateTime: "2000-01-23T04:56:07.000+00:00"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: ""
              valueFrom: 1
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "2000-01-23T04:56:07.000+00:00"
                endDateTime: "2000-01-23T04:56:07.000+00:00"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: ""
              valueFrom: 1
            maxCardinality: 0
            minCardinality: 6
            serviceSpecCharRelationship:
            - role: "role"
              relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "2000-01-23T04:56:07.000+00:00"
                endDateTime: "2000-01-23T04:56:07.000+00:00"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            - role: "role"
              relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "2000-01-23T04:56:07.000+00:00"
                endDateTime: "2000-01-23T04:56:07.000+00:00"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            regex: "regex"
            '@baseType': "@baseType"
            valueType: "valueType"
            name: "name"
            '@schemaLocation': "http://example.com/aeiou"
            extensible: true
            configurable: true
          serviceSpecRelationship:
          - role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
  ServiceSpecificationChangeEvent:
    type: "object"
    properties:
      serviceSpecification:
        description: "The involved resource data for the event"
        $ref: "#/definitions/ServiceSpecification"
    description: "The event data structure"
    example:
      serviceSpecification:
        isBundle: true
        targetServiceSchema:
          '@baseType': "@baseType"
          '@type': "@type"
          '@schemaLocation': "@schemaLocation"
        lifecycleStatus: "lifecycleStatus"
        serviceLevelSpecification:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        resourceSpecification:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        description: "description"
        relatedParty:
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "@schemaLocation"
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "@schemaLocation"
        version: "version"
        attachment:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          description: "description"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
          url: "url"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          description: "description"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
          url: "url"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
        serviceSpecCharacteristic:
        - validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          '@valueSchemaLocation': "@valueSchemaLocation"
          isUnique: true
          description: "description"
          serviceSpecCharacteristicValue:
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: ""
            valueFrom: 1
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: ""
            valueFrom: 1
          maxCardinality: 0
          minCardinality: 6
          serviceSpecCharRelationship:
          - role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          regex: "regex"
          '@baseType': "@baseType"
          valueType: "valueType"
          name: "name"
          '@schemaLocation': "http://example.com/aeiou"
          extensible: true
          configurable: true
        - validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          '@valueSchemaLocation': "@valueSchemaLocation"
          isUnique: true
          description: "description"
          serviceSpecCharacteristicValue:
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: ""
            valueFrom: 1
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: ""
            valueFrom: 1
          maxCardinality: 0
          minCardinality: 6
          serviceSpecCharRelationship:
          - role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          regex: "regex"
          '@baseType': "@baseType"
          valueType: "valueType"
          name: "name"
          '@schemaLocation': "http://example.com/aeiou"
          extensible: true
          configurable: true
        serviceSpecRelationship:
        - role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
  ServiceSpecificationDeleteNotification:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "The identifier of the notification"
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurence"
      eventType:
        type: "string"
        description: "The type of the notification"
      fieldPath:
        type: "string"
        description: "The path identifying the object field concerned by this notification"
      resourcePath:
        type: "string"
        description: "The path identifying the resource object concerned by this notification"
      event:
        description: "The event linked to the involved resource object"
        $ref: "#/definitions/ServiceSpecificationDeleteEvent"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      resourcePath: "resourcePath"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      fieldPath: "fieldPath"
      eventType: "eventType"
      event:
        serviceSpecification:
          isBundle: true
          targetServiceSchema:
            '@baseType': "@baseType"
            '@type': "@type"
            '@schemaLocation': "@schemaLocation"
          lifecycleStatus: "lifecycleStatus"
          serviceLevelSpecification:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          resourceSpecification:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          description: "description"
          relatedParty:
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "@schemaLocation"
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "@schemaLocation"
          version: "version"
          attachment:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            description: "description"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
            url: "url"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            description: "description"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
            url: "url"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
          serviceSpecCharacteristic:
          - validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            '@valueSchemaLocation': "@valueSchemaLocation"
            isUnique: true
            description: "description"
            serviceSpecCharacteristicValue:
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "2000-01-23T04:56:07.000+00:00"
                endDateTime: "2000-01-23T04:56:07.000+00:00"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: ""
              valueFrom: 1
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "2000-01-23T04:56:07.000+00:00"
                endDateTime: "2000-01-23T04:56:07.000+00:00"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: ""
              valueFrom: 1
            maxCardinality: 0
            minCardinality: 6
            serviceSpecCharRelationship:
            - role: "role"
              relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "2000-01-23T04:56:07.000+00:00"
                endDateTime: "2000-01-23T04:56:07.000+00:00"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            - role: "role"
              relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "2000-01-23T04:56:07.000+00:00"
                endDateTime: "2000-01-23T04:56:07.000+00:00"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            regex: "regex"
            '@baseType': "@baseType"
            valueType: "valueType"
            name: "name"
            '@schemaLocation': "http://example.com/aeiou"
            extensible: true
            configurable: true
          - validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            '@valueSchemaLocation': "@valueSchemaLocation"
            isUnique: true
            description: "description"
            serviceSpecCharacteristicValue:
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "2000-01-23T04:56:07.000+00:00"
                endDateTime: "2000-01-23T04:56:07.000+00:00"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: ""
              valueFrom: 1
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "2000-01-23T04:56:07.000+00:00"
                endDateTime: "2000-01-23T04:56:07.000+00:00"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: ""
              valueFrom: 1
            maxCardinality: 0
            minCardinality: 6
            serviceSpecCharRelationship:
            - role: "role"
              relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "2000-01-23T04:56:07.000+00:00"
                endDateTime: "2000-01-23T04:56:07.000+00:00"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            - role: "role"
              relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "2000-01-23T04:56:07.000+00:00"
                endDateTime: "2000-01-23T04:56:07.000+00:00"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "http://example.com/aeiou"
            regex: "regex"
            '@baseType': "@baseType"
            valueType: "valueType"
            name: "name"
            '@schemaLocation': "http://example.com/aeiou"
            extensible: true
            configurable: true
          serviceSpecRelationship:
          - role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
  ServiceSpecificationDeleteEvent:
    type: "object"
    properties:
      serviceSpecification:
        description: "The involved resource data for the event"
        $ref: "#/definitions/ServiceSpecification"
    description: "The event data structure"
    example:
      serviceSpecification:
        isBundle: true
        targetServiceSchema:
          '@baseType': "@baseType"
          '@type': "@type"
          '@schemaLocation': "@schemaLocation"
        lifecycleStatus: "lifecycleStatus"
        serviceLevelSpecification:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        resourceSpecification:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        description: "description"
        relatedParty:
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "@schemaLocation"
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "@schemaLocation"
        version: "version"
        attachment:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          description: "description"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
          url: "url"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          description: "description"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
          url: "url"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
        serviceSpecCharacteristic:
        - validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          '@valueSchemaLocation': "@valueSchemaLocation"
          isUnique: true
          description: "description"
          serviceSpecCharacteristicValue:
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: ""
            valueFrom: 1
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: ""
            valueFrom: 1
          maxCardinality: 0
          minCardinality: 6
          serviceSpecCharRelationship:
          - role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          regex: "regex"
          '@baseType': "@baseType"
          valueType: "valueType"
          name: "name"
          '@schemaLocation': "http://example.com/aeiou"
          extensible: true
          configurable: true
        - validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          '@valueSchemaLocation': "@valueSchemaLocation"
          isUnique: true
          description: "description"
          serviceSpecCharacteristicValue:
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: ""
            valueFrom: 1
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: ""
            valueFrom: 1
          maxCardinality: 0
          minCardinality: 6
          serviceSpecCharRelationship:
          - role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "2000-01-23T04:56:07.000+00:00"
              endDateTime: "2000-01-23T04:56:07.000+00:00"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          regex: "regex"
          '@baseType': "@baseType"
          valueType: "valueType"
          name: "name"
          '@schemaLocation': "http://example.com/aeiou"
          extensible: true
          configurable: true
        serviceSpecRelationship:
        - role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
  ServiceCandidateCreateNotification:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "The identifier of the notification"
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurence"
      eventType:
        type: "string"
        description: "The type of the notification"
      fieldPath:
        type: "string"
        description: "The path identifying the object field concerned by this notification"
      resourcePath:
        type: "string"
        description: "The path identifying the resource object concerned by this notification"
      event:
        description: "The event linked to the involved resource object"
        $ref: "#/definitions/ServiceCandidateCreateEvent"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      resourcePath: "resourcePath"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      fieldPath: "fieldPath"
      eventType: "eventType"
      event:
        serviceCandidate:
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          serviceSpecification:
            targetServiceSchema:
              '@baseType': "@baseType"
              '@type': "@type"
              '@schemaLocation': "@schemaLocation"
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          description: "description"
          version: "version"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "href"
          category:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
  ServiceCandidateCreateEvent:
    type: "object"
    properties:
      serviceCandidate:
        description: "The involved resource data for the event"
        $ref: "#/definitions/ServiceCandidate"
    description: "The event data structure"
    example:
      serviceCandidate:
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        serviceSpecification:
          targetServiceSchema:
            '@baseType': "@baseType"
            '@type': "@type"
            '@schemaLocation': "@schemaLocation"
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        description: "description"
        version: "version"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "href"
        category:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  ServiceCandidateChangeNotification:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "The identifier of the notification"
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurence"
      eventType:
        type: "string"
        description: "The type of the notification"
      fieldPath:
        type: "string"
        description: "The path identifying the object field concerned by this notification"
      resourcePath:
        type: "string"
        description: "The path identifying the resource object concerned by this notification"
      event:
        description: "The event linked to the involved resource object"
        $ref: "#/definitions/ServiceCandidateChangeEvent"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      resourcePath: "resourcePath"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      fieldPath: "fieldPath"
      eventType: "eventType"
      event:
        serviceCandidate:
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          serviceSpecification:
            targetServiceSchema:
              '@baseType': "@baseType"
              '@type': "@type"
              '@schemaLocation': "@schemaLocation"
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          description: "description"
          version: "version"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "href"
          category:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
  ServiceCandidateChangeEvent:
    type: "object"
    properties:
      serviceCandidate:
        description: "The involved resource data for the event"
        $ref: "#/definitions/ServiceCandidate"
    description: "The event data structure"
    example:
      serviceCandidate:
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        serviceSpecification:
          targetServiceSchema:
            '@baseType': "@baseType"
            '@type': "@type"
            '@schemaLocation': "@schemaLocation"
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        description: "description"
        version: "version"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "href"
        category:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  ServiceCandidateDeleteNotification:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "The identifier of the notification"
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurence"
      eventType:
        type: "string"
        description: "The type of the notification"
      fieldPath:
        type: "string"
        description: "The path identifying the object field concerned by this notification"
      resourcePath:
        type: "string"
        description: "The path identifying the resource object concerned by this notification"
      event:
        description: "The event linked to the involved resource object"
        $ref: "#/definitions/ServiceCandidateDeleteEvent"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      resourcePath: "resourcePath"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      fieldPath: "fieldPath"
      eventType: "eventType"
      event:
        serviceCandidate:
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          serviceSpecification:
            targetServiceSchema:
              '@baseType': "@baseType"
              '@type': "@type"
              '@schemaLocation': "@schemaLocation"
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          description: "description"
          version: "version"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "href"
          category:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
  ServiceCandidateDeleteEvent:
    type: "object"
    properties:
      serviceCandidate:
        description: "The involved resource data for the event"
        $ref: "#/definitions/ServiceCandidate"
    description: "The event data structure"
    example:
      serviceCandidate:
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        serviceSpecification:
          targetServiceSchema:
            '@baseType': "@baseType"
            '@type': "@type"
            '@schemaLocation': "@schemaLocation"
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        description: "description"
        version: "version"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "href"
        category:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  ServiceCategoryCreateNotification:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "The identifier of the notification"
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurence"
      eventType:
        type: "string"
        description: "The type of the notification"
      fieldPath:
        type: "string"
        description: "The path identifying the object field concerned by this notification"
      resourcePath:
        type: "string"
        description: "The path identifying the resource object concerned by this notification"
      event:
        description: "The event linked to the involved resource object"
        $ref: "#/definitions/ServiceCategoryCreateEvent"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      resourcePath: "resourcePath"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      fieldPath: "fieldPath"
      eventType: "eventType"
      event:
        serviceCategory:
          isRoot: true
          lifecycleStatus: "lifecycleStatus"
          serviceCandidate:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          description: "description"
          version: "version"
          parentId: "parentId"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "href"
          category:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
  ServiceCategoryCreateEvent:
    type: "object"
    properties:
      serviceCategory:
        description: "The involved resource data for the event"
        $ref: "#/definitions/ServiceCategory"
    description: "The event data structure"
    example:
      serviceCategory:
        isRoot: true
        lifecycleStatus: "lifecycleStatus"
        serviceCandidate:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        description: "description"
        version: "version"
        parentId: "parentId"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "href"
        category:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  ServiceCategoryChangeNotification:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "The identifier of the notification"
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurence"
      eventType:
        type: "string"
        description: "The type of the notification"
      fieldPath:
        type: "string"
        description: "The path identifying the object field concerned by this notification"
      resourcePath:
        type: "string"
        description: "The path identifying the resource object concerned by this notification"
      event:
        description: "The event linked to the involved resource object"
        $ref: "#/definitions/ServiceCategoryChangeEvent"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      resourcePath: "resourcePath"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      fieldPath: "fieldPath"
      eventType: "eventType"
      event:
        serviceCategory:
          isRoot: true
          lifecycleStatus: "lifecycleStatus"
          serviceCandidate:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          description: "description"
          version: "version"
          parentId: "parentId"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "href"
          category:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
  ServiceCategoryChangeEvent:
    type: "object"
    properties:
      serviceCategory:
        description: "The involved resource data for the event"
        $ref: "#/definitions/ServiceCategory"
    description: "The event data structure"
    example:
      serviceCategory:
        isRoot: true
        lifecycleStatus: "lifecycleStatus"
        serviceCandidate:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        description: "description"
        version: "version"
        parentId: "parentId"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "href"
        category:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  ServiceCategoryDeleteNotification:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "The identifier of the notification"
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurence"
      eventType:
        type: "string"
        description: "The type of the notification"
      fieldPath:
        type: "string"
        description: "The path identifying the object field concerned by this notification"
      resourcePath:
        type: "string"
        description: "The path identifying the resource object concerned by this notification"
      event:
        description: "The event linked to the involved resource object"
        $ref: "#/definitions/ServiceCategoryDeleteEvent"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      resourcePath: "resourcePath"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      fieldPath: "fieldPath"
      eventType: "eventType"
      event:
        serviceCategory:
          isRoot: true
          lifecycleStatus: "lifecycleStatus"
          serviceCandidate:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          description: "description"
          version: "version"
          parentId: "parentId"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "href"
          category:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
  ServiceCategoryDeleteEvent:
    type: "object"
    properties:
      serviceCategory:
        description: "The involved resource data for the event"
        $ref: "#/definitions/ServiceCategory"
    description: "The event data structure"
    example:
      serviceCategory:
        isRoot: true
        lifecycleStatus: "lifecycleStatus"
        serviceCandidate:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        description: "description"
        version: "version"
        parentId: "parentId"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "href"
        category:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  ServiceCatalogCreateNotification:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "The identifier of the notification"
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurence"
      eventType:
        type: "string"
        description: "The type of the notification"
      fieldPath:
        type: "string"
        description: "The path identifying the object field concerned by this notification"
      resourcePath:
        type: "string"
        description: "The path identifying the resource object concerned by this notification"
      event:
        description: "The event linked to the involved resource object"
        $ref: "#/definitions/ServiceCatalogCreateEvent"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      resourcePath: "resourcePath"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      fieldPath: "fieldPath"
      eventType: "eventType"
      event:
        serviceCatalog:
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          description: "description"
          relatedParty:
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "@schemaLocation"
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "@schemaLocation"
          version: "version"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "href"
          category:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
  ServiceCatalogCreateEvent:
    type: "object"
    properties:
      serviceCatalog:
        description: "The involved resource data for the event"
        $ref: "#/definitions/ServiceCatalog"
    description: "The event data structure"
    example:
      serviceCatalog:
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        description: "description"
        relatedParty:
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "@schemaLocation"
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "@schemaLocation"
        version: "version"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "href"
        category:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  ServiceCatalogChangeNotification:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "The identifier of the notification"
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurence"
      eventType:
        type: "string"
        description: "The type of the notification"
      fieldPath:
        type: "string"
        description: "The path identifying the object field concerned by this notification"
      resourcePath:
        type: "string"
        description: "The path identifying the resource object concerned by this notification"
      event:
        description: "The event linked to the involved resource object"
        $ref: "#/definitions/ServiceCatalogChangeEvent"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      resourcePath: "resourcePath"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      fieldPath: "fieldPath"
      eventType: "eventType"
      event:
        serviceCatalog:
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          description: "description"
          relatedParty:
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "@schemaLocation"
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "@schemaLocation"
          version: "version"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "href"
          category:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
  ServiceCatalogChangeEvent:
    type: "object"
    properties:
      serviceCatalog:
        description: "The involved resource data for the event"
        $ref: "#/definitions/ServiceCatalog"
    description: "The event data structure"
    example:
      serviceCatalog:
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        description: "description"
        relatedParty:
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "@schemaLocation"
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "@schemaLocation"
        version: "version"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "href"
        category:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  ServiceCatalogBatchNotification:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "The identifier of the notification"
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurence"
      eventType:
        type: "string"
        description: "The type of the notification"
      fieldPath:
        type: "string"
        description: "The path identifying the object field concerned by this notification"
      resourcePath:
        type: "string"
        description: "The path identifying the resource object concerned by this notification"
      event:
        description: "The event linked to the involved resource object"
        $ref: "#/definitions/ServiceCatalogBatchEvent"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      resourcePath: "resourcePath"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      fieldPath: "fieldPath"
      eventType: "eventType"
      event:
        serviceCatalog:
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          description: "description"
          relatedParty:
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "@schemaLocation"
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "@schemaLocation"
          version: "version"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "href"
          category:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
  ServiceCatalogBatchEvent:
    type: "object"
    properties:
      serviceCatalog:
        description: "The involved resource data for the event"
        $ref: "#/definitions/ServiceCatalog"
    description: "The event data structure"
    example:
      serviceCatalog:
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        description: "description"
        relatedParty:
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "@schemaLocation"
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "@schemaLocation"
        version: "version"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "href"
        category:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  ServiceCatalogDeleteNotification:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "The identifier of the notification"
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurence"
      eventType:
        type: "string"
        description: "The type of the notification"
      fieldPath:
        type: "string"
        description: "The path identifying the object field concerned by this notification"
      resourcePath:
        type: "string"
        description: "The path identifying the resource object concerned by this notification"
      event:
        description: "The event linked to the involved resource object"
        $ref: "#/definitions/ServiceCatalogDeleteEvent"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      resourcePath: "resourcePath"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      fieldPath: "fieldPath"
      eventType: "eventType"
      event:
        serviceCatalog:
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "2000-01-23T04:56:07.000+00:00"
            endDateTime: "2000-01-23T04:56:07.000+00:00"
          '@type': "@type"
          description: "description"
          relatedParty:
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "@schemaLocation"
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "@schemaLocation"
          version: "version"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "href"
          category:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
  ServiceCatalogDeleteEvent:
    type: "object"
    properties:
      serviceCatalog:
        description: "The involved resource data for the event"
        $ref: "#/definitions/ServiceCatalog"
    description: "The event data structure"
    example:
      serviceCatalog:
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "2000-01-23T04:56:07.000+00:00"
          endDateTime: "2000-01-23T04:56:07.000+00:00"
        '@type': "@type"
        description: "description"
        relatedParty:
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "@schemaLocation"
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "@schemaLocation"
        version: "version"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "href"
        category:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  Error:
    type: "object"
    required:
    - "code"
    - "reason"
    properties:
      code:
        type: "integer"
        description: "Application relevant detail, defined in the API or a common\
          \ list."
      reason:
        type: "string"
        description: "Explanation of the reason for the error which can be shown to\
          \ a client user."
      message:
        type: "string"
        description: "More details and corrective actions related to the error which\
          \ can be shown to a client user."
      status:
        type: "integer"
        description: "HTTP Error code extension"
      referenceError:
        type: "string"
        format: "uri"
        description: "URI of documentation describing the error."
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class."
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name."
    description: "Used when an API throws an Error, typically with a HTTP error response-code\
      \ (3xx, 4xx, 5xx)"
